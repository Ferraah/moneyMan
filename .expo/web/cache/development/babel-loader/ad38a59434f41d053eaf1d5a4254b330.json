{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Home from \"./components/home\";\nimport ReportOverview from \"./components/reportOverview\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport * as eva from '@eva-design/eva';\nimport { default as theme } from \"./assets/custom-theme.json\";\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport { Poppins_400Regular, useFonts } from '@expo-google-fonts/poppins';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var strictTheme = _defineProperty({}, 'text-font-family', 'Poppins_400Regular');\n\n  var customMapping = {\n    strict: strictTheme\n  };\n\n  var _useFonts = useFonts({\n    Poppins_400Regular: Poppins_400Regular\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  if (!fontsLoaded) {\n    return _jsx(_Fragment, {\n      children: _jsx(Text, {\n        children: \"Loading\"\n      })\n    });\n  } else {\n    return _jsxs(_Fragment, {\n      children: [_jsx(IconRegistry, {\n        icons: EvaIconsPack\n      }), _jsx(ApplicationProvider, _objectSpread(_objectSpread({}, eva), {}, {\n        theme: eva.light,\n        customMapping: customMapping,\n        children: _jsx(NavigationContainer, {\n          children: _jsxs(Stack.Navigator, {\n            initialRouteName: \"Home\",\n            children: [_jsx(Stack.Screen, {\n              name: \"Home\",\n              component: Home\n            }), _jsx(Stack.Screen, {\n              name: \"ReportOverview\",\n              component: ReportOverview\n            })]\n          })\n        })\n      }))]\n    });\n  }\n}","map":{"version":3,"sources":["/home/daniele/Programmazione/React/graph/App.js"],"names":["Home","ReportOverview","NavigationContainer","createNativeStackNavigator","eva","default","theme","ApplicationProvider","IconRegistry","EvaIconsPack","Poppins_400Regular","useFonts","Stack","App","strictTheme","customMapping","strict","fontsLoaded","error","light"],"mappings":";;;;;;;;;;AAEA,OAAOA,IAAP;AACA,OAAOC,cAAP;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AAEA,SAASC,OAAO,IAAIC,KAApB;AACA,SAASC,mBAAT,EAA8BC,YAA9B,QAAiD,uBAAjD;AAEA,SAASC,YAAT,QAA6B,sBAA7B;AACA,SAAUC,kBAAV,EAA8BC,QAA9B,QAA8C,4BAA9C;;;;AAEA,IAAMC,KAAK,GAAGT,0BAA0B,EAAxC;AAEA,eAAe,SAASU,GAAT,GAAe;AAC5B,MAAMC,WAAW,uBAAM,kBAAN,EAA2B,oBAA3B,CAAjB;;AACA,MAAMC,aAAa,GAAG;AAAEC,IAAAA,MAAM,EAAEF;AAAV,GAAtB;;AAGA,kBAA2BH,QAAQ,CAAC;AAClCD,IAAAA,kBAAkB,EAAlBA;AADkC,GAAD,CAAnC;AAAA;AAAA,MAAKO,WAAL;AAAA,MAAkBC,KAAlB;;AAIA,MAAG,CAACD,WAAJ,EAAgB;AACd,WAAO;AAAA,gBACL,KAAC,IAAD;AAAA;AAAA;AADK,MAAP;AAGD,GAJD,MAKI;AACF,WACE;AAAA,iBACI,KAAC,YAAD;AAAc,QAAA,KAAK,EAAER;AAArB,QADJ,EAEI,KAAC,mBAAD,kCAAyBL,GAAzB;AAA8B,QAAA,KAAK,EAAEA,GAAG,CAACe,KAAzC;AAAiD,QAAA,aAAa,EAAEJ,aAAhE;AAAA,kBACE,KAAC,mBAAD;AAAA,oBACE,MAAC,KAAD,CAAO,SAAP;AAAiB,YAAA,gBAAgB,EAAC,MAAlC;AAAA,uBACI,KAAC,KAAD,CAAO,MAAP;AAAc,cAAA,IAAI,EAAC,MAAnB;AAA0B,cAAA,SAAS,EAAEf;AAArC,cADJ,EAEI,KAAC,KAAD,CAAO,MAAP;AAAc,cAAA,IAAI,EAAC,gBAAnB;AAAoC,cAAA,SAAS,EAAEC;AAA/C,cAFJ;AAAA;AADF;AADF,SAFJ;AAAA,MADF;AAcD;AAcF","sourcesContent":["import { StyleSheet, Text, View } from 'react-native';\n\nimport Home from './components/home'\nimport ReportOverview from './components/reportOverview';\n\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\n\nimport * as eva from '@eva-design/eva';\n\nimport { default as theme } from './assets/custom-theme.json'; // <-- Import app theme\nimport { ApplicationProvider, IconRegistry} from '@ui-kitten/components';\n\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport {  Poppins_400Regular, useFonts } from '@expo-google-fonts/poppins'\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  const strictTheme = { ['text-font-family']: 'Poppins_400Regular' }; // <-- Your Font\n  const customMapping = { strict: strictTheme };\n\n  /* FONTS LOADING */\n  let [fontsLoaded, error] = useFonts({\n    Poppins_400Regular,\n  });\n\n  if(!fontsLoaded){\n    return(<>\n      <Text>Loading</Text>\n    </>)\n  }\n  else{\n    return(\n      <>\n          <IconRegistry icons={EvaIconsPack} />\n          <ApplicationProvider {...eva} theme={eva.light}  customMapping={customMapping}>\n            <NavigationContainer>\n              <Stack.Navigator initialRouteName=\"Home\">\n                  <Stack.Screen name=\"Home\" component={Home} />\n                  <Stack.Screen name=\"ReportOverview\" component={ReportOverview} />\n              </Stack.Navigator>\n          </NavigationContainer>\n          </ApplicationProvider>\n      </>\n  \n    );\n  }\n\n/*\n  return (\n        <NavigationContainer>\n          <Stack.Navigator initialRouteName=\"Home\">\n              <Stack.Screen name=\"Home\" component={Home} />\n              <Stack.Screen name=\"ReportOverview\" component={ReportOverview} />\n          </Stack.Navigator>\n      </NavigationContainer>\n\n\n  );\n  */\n}\n\n"]},"metadata":{},"sourceType":"module"}