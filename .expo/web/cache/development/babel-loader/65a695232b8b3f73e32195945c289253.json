{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firestore from '@react-native-firebase/firestore';\nimport React, { Component } from 'react';\nimport { db } from \"./firebaseInfo\";\nimport { collection, getDoc, doc } from 'irebase/firestore';\nexport default function getData() {\n  var docRef, docSnap;\n  return _regeneratorRuntime.async(function getData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          docRef = doc(db, \"Users\", \"Zeta\");\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(getDoc(docRef));\n\n        case 3:\n          docSnap = _context.sent;\n\n          if (docSnap.exists()) {\n            console.log(\"Document data:\", docSnap.data());\n          } else {\n            console.log(\"No such document!\");\n          }\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/home/daniele/Programmazione/React/graph/firebase/getData.js"],"names":["firestore","React","Component","db","collection","getDoc","doc","getData","docRef","docSnap","exists","console","log","data"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,kCAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,SAAQC,EAAR;AACA,SAAQC,UAAR,EAAoBC,MAApB,EAA4BC,GAA5B,QAAsC,mBAAtC;AAqBA,eAAe,SAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAeLC,UAAAA,MAfK,GAeIF,GAAG,CAACH,EAAD,EAAK,OAAL,EAAc,MAAd,CAfP;AAAA;AAAA,2CAgBWE,MAAM,CAACG,MAAD,CAhBjB;;AAAA;AAgBLC,UAAAA,OAhBK;;AAkBX,cAAIA,OAAO,CAACC,MAAR,EAAJ,EAAsB;AACtBC,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BH,OAAO,CAACI,IAAR,EAA9B;AACC,WAFD,MAEO;AAEPF,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACC;;AAvBU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import firestore from '@react-native-firebase/firestore'\nimport React, {Component} from 'react'\n\nimport {db} from './firebaseInfo'\nimport {collection, getDoc, doc} from 'irebase/firestore'\n\n/*\nclass Firebase extends Component{\n\n    constructor(props){\n        super(props);\n        this.getUser();\n        this.subscriber = firestore().collection(\"Daniele\").doc\n        ('N5CAEQZq3T2LifobBdgx').onSnapshot(doc=>{\n            this.setState({\n                data:{}\n            })\n        })\n    }\n\n\n}*/\n\n\n\nexport default async function getData(){\n    /*const docRef = db.collection('Users').doc('Zeta');\n\n    docRef.get().then((doc) => {\n        if (doc.exists) {\n            console.log(\"Document data:\", doc.data());\n        } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    }).catch((error) => {\n        console.log(\"Error getting document:\", error);\n    });*/\n\n\n    const docRef = doc(db, \"Users\", \"Zeta\");\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n    console.log(\"Document data:\", docSnap.data());\n    } else {\n    // doc.data() will be undefined in this case\n    console.log(\"No such document!\");\n    }\n\n\n} "]},"metadata":{},"sourceType":"module"}