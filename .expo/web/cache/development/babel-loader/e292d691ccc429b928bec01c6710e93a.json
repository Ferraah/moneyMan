{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firestore from '@react-native-firebase/firestore';\nimport React, { Component, useState } from 'react';\nimport { db } from \"./firebaseInfo\";\nimport { collection, getDocs, doc, query } from 'firebase/firestore';\nexport default function getUserTriplets(username) {\n  var tripletsList, q, querySnapshot;\n  return _regeneratorRuntime.async(function getUserTriplets$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          tripletsList = [];\n          q = query(collection(db, \"Users/\" + username + \"/Reports\"));\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(getDocs(q));\n\n        case 4:\n          querySnapshot = _context.sent;\n          querySnapshot.forEach(function (doc) {\n            tripletsList.push(doc.data());\n          });\n          return _context.abrupt(\"return\", tripletsList);\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["/home/daniele/Programmazione/React/graph/firebase/getData.js"],"names":["firestore","React","Component","useState","db","collection","getDocs","doc","query","getUserTriplets","username","tripletsList","q","querySnapshot","forEach","push","data"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,kCAAtB;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,SAAQC,EAAR;AACA,SAAQC,UAAR,EAAoBC,OAApB,EAA6BC,GAA7B,EAAkCC,KAAlC,QAA8C,oBAA9C;AAqBA,eAAe,SAAeC,eAAf,CAA+BC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,UAAAA,YADO,GACQ,EADR;AAgBLC,UAAAA,CAhBK,GAgBDJ,KAAK,CAACH,UAAU,CAACD,EAAD,EAAK,WAASM,QAAT,GAAkB,UAAvB,CAAX,CAhBJ;AAAA;AAAA,2CAiBiBJ,OAAO,CAACM,CAAD,CAjBxB;;AAAA;AAiBLC,UAAAA,aAjBK;AAkBXA,UAAAA,aAAa,CAACC,OAAd,CAAsB,UAACP,GAAD,EAAS;AAC3BI,YAAAA,YAAY,CAACI,IAAb,CAAkBR,GAAG,CAACS,IAAJ,EAAlB;AACH,WAFD;AAlBW,2CAkCJL,YAlCI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import firestore from '@react-native-firebase/firestore'\nimport React, {Component, useState} from 'react'\n\nimport {db} from './firebaseInfo'\nimport {collection, getDocs, doc, query} from 'firebase/firestore'\n\n/*\nclass Firebase extends Component{\n\n    constructor(props){\n        super(props);\n        this.getUser();\n        this.subscriber = firestore().collection(\"Daniele\").doc\n        ('N5CAEQZq3T2LifobBdgx').onSnapshot(doc=>{\n            this.setState({\n                data:{}\n            })\n        })\n    }\n\n\n}*/\n\n\n\nexport default async function getUserTriplets(username){\n    var tripletsList = [];\n\n    /*const docRef = db.collection('Users').doc('Zeta');\n\n    docRef.get().then((doc) => {\n        if (doc.exists) {\n            console.log(\"Document data:\", doc.data());\n        } else {\n            // doc.data() will be undefined in this case\n            console.log(\"No such document!\");\n        }\n    }).catch((error) => {\n        console.log(\"Error getting document:\", error);\n    });*/\n\n    const q = query(collection(db, \"Users/\"+username+\"/Reports\"))\n    const querySnapshot = await getDocs(q);\n    querySnapshot.forEach((doc) => {\n        tripletsList.push(doc.data());\n    });\n\n\n/*\n    const docRef = doc(db, \"Users/Zeta/Reports\", \"BZltMgqgO9aCaikQRRz6\");\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n    console.log(\"Document data:\", docSnap.data());\n    } else {\n    // doc.data() will be undefined in this case\n    console.log(\"No such document!\");\n    }\n*/\n    return tripletsList\n} "]},"metadata":{},"sourceType":"module"}