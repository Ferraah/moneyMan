{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { React, useState } from 'react';\nimport AddModal from \"../shared/addModal\";\nimport DataList from \"./dataList\";\nimport EntriesListWithEmoji from \"../shared/entriesListWithEmoji\";\nimport { Button, Layout, Card, Icon } from '@ui-kitten/components';\nimport { Poppins_400Regular, Poppins_600SemiBold, useFonts } from '@expo-google-fonts/poppins';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ReportOverview(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var data = route.params;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAddingIncome = _useState4[0],\n      setAddingIncome = _useState4[1];\n\n  var AddButton = function AddButton(props) {\n    return _jsx(Icon, {\n      name: \"plus-circle\",\n      style: {\n        width: 50,\n        height: 50,\n        tintColor: props.color\n      }\n    });\n  };\n\n  var _useFonts = useFonts({\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_600SemiBold: Poppins_600SemiBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  var toggleModal = function toggleModal(incomeButton) {\n    if (incomeButton) setAddingIncome(true);else setAddingIncome(false);\n    setModalVisible(!isModalVisible);\n  };\n\n  if (!fontsLoaded) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Loading\"\n      })\n    });\n  } else {\n    return _jsxs(Layout, {\n      style: styles.container,\n      children: [_jsx(AddModal, {\n        toggleModal: toggleModal,\n        isModalVisible: isModalVisible,\n        isAddingIncome: isAddingIncome\n      }), _jsxs(View, {\n        style: styles.incomeView,\n        children: [_jsx(Text, {\n          style: fontsStyle.regular16,\n          children: \"Total incomes:\"\n        }), _jsxs(View, {\n          style: styles.valueAndButton,\n          children: [_jsx(Text, {\n            style: fontsStyle.semibold39,\n            children: \"100,0\\u20AC\"\n          }), _jsx(Button, {\n            accessoryLeft: function accessoryLeft() {\n              return AddButton({\n                color: 'green'\n              });\n            },\n            onPress: function onPress() {\n              return toggleModal(true);\n            },\n            appearance: \"ghost\"\n          })]\n        }), _jsx(Text, {\n          style: fontsStyle.regular16,\n          children: \"Total expenses:\"\n        }), _jsxs(View, {\n          style: styles.valueAndButton,\n          children: [_jsx(Text, {\n            style: fontsStyle.semibold39,\n            children: \"100,0\\u20AC\"\n          }), _jsx(Button, {\n            accessoryLeft: function accessoryLeft() {\n              return AddButton({\n                color: 'red'\n              });\n            },\n            onPress: function onPress() {\n              return toggleModal(false);\n            },\n            appearance: \"ghost\"\n          })]\n        })]\n      }), _jsx(EntriesListWithEmoji, {\n        rawData: data.rawData,\n        style: styles.entriesList\n      })]\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  incomeView: {\n    borderColor: 'red',\n    borderWidth: 1,\n    width: '80%',\n    alignSelf: 'center',\n    marginVertical: 100\n  },\n  valueAndButton: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  container: {\n    marginVertical: 20,\n    marginHorizontal: 20,\n    flex: 1\n  },\n  dateAndButtonView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  changeButton: {\n    flex: 1,\n    marginLeft: 100\n  },\n  date: {\n    flex: 1,\n    justifyContent: 'center'\n  }\n});\nvar fontsStyle = StyleSheet.create({\n  regular16: {\n    fontSize: 16,\n    fontFamily: 'Poppins_400Regular'\n  },\n  regular25: {\n    fontSize: 25,\n    fontFamily: 'Poppins_400Regular'\n  },\n  regular39: {\n    fontSize: 39,\n    fontFamily: 'Poppins_400Regular'\n  },\n  semibold16: {\n    fontSize: 16,\n    fontFamily: 'Poppins_600SemiBold'\n  },\n  semibold25: {\n    fontSize: 25,\n    fontFamily: 'Poppins_600SemiBold'\n  },\n  semibold39: {\n    fontSize: 39,\n    fontFamily: 'Poppins_600SemiBold'\n  }\n});","map":{"version":3,"sources":["/home/daniele/Programmazione/React/graph/components/reportOverview.js"],"names":["React","useState","AddModal","DataList","EntriesListWithEmoji","Button","Layout","Card","Icon","Poppins_400Regular","Poppins_600SemiBold","useFonts","ReportOverview","route","navigation","data","params","isModalVisible","setModalVisible","isAddingIncome","setAddingIncome","AddButton","props","width","height","tintColor","color","fontsLoaded","error","toggleModal","incomeButton","styles","container","incomeView","fontsStyle","regular16","valueAndButton","semibold39","rawData","entriesList","StyleSheet","create","borderColor","borderWidth","alignSelf","marginVertical","flexDirection","justifyContent","marginHorizontal","flex","dateAndButtonView","changeButton","marginLeft","date","fontSize","fontFamily","regular25","regular39","semibold16","semibold25"],"mappings":"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","sourcesContent":["\nimport {Text, StyleSheet, View, FlatList, TextInput} from 'react-native'\nimport {React, useState} from 'react'\nimport AddModal from '../shared/addModal';\nimport DataList from './dataList';\nimport EntriesListWithEmoji from '../shared/entriesListWithEmoji';\n\nimport {Button, Layout, Card, Icon} from '@ui-kitten/components'\n\nimport { Poppins_400Regular, Poppins_600SemiBold, useFonts } from '@expo-google-fonts/poppins'\n\n\n\nexport default function ReportOverview({route, navigation}){\n    const data = route.params\n    const [isModalVisible, setModalVisible] = useState(false);\n    const [isAddingIncome, setAddingIncome] = useState();\n  \n    const AddButton = (props) =>(\n        <Icon name='plus-circle' style={{ width: 50, height: 50, tintColor: props.color }} />\n    )\n\n      \n    /* FONTS LOADING */\n    let [fontsLoaded, error] = useFonts({\n        Poppins_400Regular,\n        Poppins_600SemiBold\n      });\n\n      \n    const toggleModal = (incomeButton) => {\n        if(incomeButton)\n            setAddingIncome(true);\n        else\n            setAddingIncome(false);\n\n        setModalVisible(!isModalVisible);\n    };\n\n    if (!fontsLoaded) {\n        return (\n            <View>\n                <Text>Loading</Text>\n            </View>\n        );\n    }else{\n        return(\n            <Layout style={styles.container}>\n\n                <AddModal toggleModal={toggleModal} isModalVisible={isModalVisible} isAddingIncome={isAddingIncome}/>\n\n                {/*\n                    <View style={styles.monthLabel}>\n                        <Text style={fontsStyle.semibold25}>{data.timeSpanName}</Text>\n                    </View>*/\n                }\n                <View style={styles.incomeView}>                            \n                    <Text style={fontsStyle.regular16}>Total incomes:</Text>\n                    <View style={styles.valueAndButton}>\n                        <Text style={fontsStyle.semibold39}>100,0€</Text>\n                        <Button accessoryLeft={() => AddButton({color: 'green'})} onPress={() => toggleModal(true)} appearance='ghost'></Button>\n                    </View>\n                    <Text style={fontsStyle.regular16}>Total expenses:</Text>\n                    <View style={styles.valueAndButton}>\n                        <Text style={fontsStyle.semibold39}>100,0€</Text>\n                        <Button accessoryLeft={() => AddButton({color: 'red'})} onPress={() => toggleModal(false)} appearance='ghost'></Button>\n                    </View>\n\n                </View>\n\n\n                {/*<DataList rawData={data.rawData}/>*/}\n                {<EntriesListWithEmoji rawData={data.rawData} style={styles.entriesList}/>}\n            </Layout>\n        );\n    }\n\n}\n\n\n\n  \nconst styles = StyleSheet.create({\n    incomeView:{\n        //backgroundColor: 'pink',\n        borderColor: 'red',\n        borderWidth: 1,\n        width: '80%',\n        alignSelf: 'center',\n        marginVertical: 100\n\n    },\n    valueAndButton:{\n        flexDirection: 'row',\n        //backgroundColor: 'purple',\n        justifyContent: 'space-between'        \n    },\n    container:{\n        marginVertical: 20,\n        marginHorizontal: 20,\n        //backgroundColor: 'grey',\n        flex: 1\n    },\n\n    dateAndButtonView:{\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        /*backgroundColor: 'red'        */\n\n    },\n    changeButton: {\n        flex: 1,\n        marginLeft: 100,\n    },\n    date:{\n        flex: 1,\n        justifyContent: 'center',\n        /*backgroundColor: 'blue'*/\n    },\n\n\n\n});\n\nconst fontsStyle = StyleSheet.create({\n    regular16: {\n        fontSize: 16,\n        fontFamily: 'Poppins_400Regular'\n    },\n    regular25: {\n        fontSize: 25,\n        fontFamily: 'Poppins_400Regular'\n    },\n    regular39: {\n        fontSize: 39,\n        fontFamily: 'Poppins_400Regular'\n    },\n    semibold16: {\n        fontSize: 16,\n        fontFamily: 'Poppins_600SemiBold'\n    },\n    semibold25: {\n        fontSize: 25,\n        fontFamily: 'Poppins_600SemiBold'\n    },\n    semibold39: {\n        fontSize: 39,\n        fontFamily: 'Poppins_600SemiBold'\n    },\n})"]},"metadata":{},"sourceType":"module"}