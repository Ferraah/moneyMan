{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { React, useState } from 'react';\nimport AddModal from \"./addModal\";\nimport DataList from \"./dataList\";\nimport { Button, Layout, Card } from '@ui-kitten/components';\nimport { Poppins_400Regular, Poppins_600SemiBold, useFonts } from '@expo-google-fonts/poppins';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ReportOverview(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var data = route.params;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isModalVisible = _useState2[0],\n      setModalVisible = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAddingIncome = _useState4[0],\n      setAddingIncome = _useState4[1];\n\n  var _useFonts = useFonts({\n    Poppins_400Regular: Poppins_400Regular,\n    Poppins_600SemiBold: Poppins_600SemiBold\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 2),\n      fontsLoaded = _useFonts2[0],\n      error = _useFonts2[1];\n\n  var toggleModal = function toggleModal(incomeButton) {\n    if (incomeButton) setAddingIncome(true);else setAddingIncome(false);\n    setModalVisible(!isModalVisible);\n  };\n\n  if (!fontsLoaded) {\n    return _jsx(View, {\n      children: _jsx(Text, {\n        children: \"Loading\"\n      })\n    });\n  } else {\n    return _jsxs(Layout, {\n      style: styles.container,\n      children: [_jsxs(View, {\n        style: styles.incomeView,\n        children: [_jsx(Text, {\n          style: fontsStyle.regular16,\n          children: \"Total incomes:\"\n        }), _jsxs(View, {\n          style: styles.valueAndButton,\n          children: [_jsx(Text, {\n            style: fontsStyle.regular39,\n            children: \"100,0\\u20AC\"\n          }), _jsx(Button, {\n            children: \"+\"\n          })]\n        })]\n      }), _jsx(Text, {\n        style: fontsStyle.regular16,\n        children: \"Total expenses:\"\n      }), _jsx(Text, {\n        style: fontsStyle.regular39,\n        children: \"100,0\\u20AC\"\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return toggleModal(true);\n        },\n        status: \"success\",\n        appearance: \"outline\",\n        children: \"New Income\"\n      }), _jsx(Button, {\n        onPress: function onPress() {\n          return toggleModal(false);\n        },\n        status: \"danger\",\n        appearance: \"outline\",\n        children: \"New Expense\"\n      }), _jsx(AddModal, {\n        toggleModal: toggleModal,\n        isModalVisible: isModalVisible,\n        isAddingIncome: isAddingIncome\n      }), _jsx(DataList, {\n        rawData: data.rawData\n      })]\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  incomeView: {\n    backgroundColor: 'pink',\n    padding: 20\n  },\n  valueAndButton: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: 'purple'\n  },\n  monthLabel: {\n    marginRight: 'auto',\n    marginLeft: 20,\n    marginVertical: 20\n  },\n  bigBoldText: {\n    fontSize: 40,\n    fontWeight: 'bold'\n  },\n  mediumBoldText: {\n    fontSize: 30,\n    fontWeight: 'bold'\n  },\n  normalText: {\n    fontSize: 20,\n    fontFamily: 'Poppins_400Regular'\n  },\n  container: {\n    marginVertical: 20,\n    marginHorizontal: 20,\n    alignItems: 'center',\n    backgroundColor: 'grey',\n    flex: 1\n  },\n  modal: {\n    padding: 30,\n    flex: 0,\n    backgroundColor: 'white'\n  },\n  dateAndButtonView: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  changeButton: {\n    flex: 1,\n    marginLeft: 100\n  },\n  date: {\n    flex: 1,\n    justifyContent: 'center'\n  },\n  valueView: {\n    marginTop: 20\n  },\n  insertButton: {\n    marginTop: 40\n  }\n});\nvar fontsStyle = StyleSheet.create({\n  regular16: {\n    fontSize: 16,\n    fontFamily: 'Poppins_400Regular'\n  },\n  regular25: {\n    fontSize: 25,\n    fontFamily: 'Poppins_400Regular'\n  },\n  regular39: {\n    fontSize: 39,\n    fontFamily: 'Poppins_400Regular'\n  },\n  semibold16: {\n    fontSize: 16,\n    fontFamily: 'Poppins_600SemiBold'\n  },\n  semibold25: {\n    fontSize: 25,\n    fontFamily: 'Poppins_600SemiBold'\n  },\n  semibold39: {\n    fontSize: 39,\n    fontFamily: 'Poppins_600SemiBold'\n  }\n});","map":{"version":3,"sources":["/home/daniele/Programmazione/React/graph/components/reportOverview.js"],"names":["React","useState","AddModal","DataList","Button","Layout","Card","Poppins_400Regular","Poppins_600SemiBold","useFonts","ReportOverview","route","navigation","data","params","isModalVisible","setModalVisible","isAddingIncome","setAddingIncome","fontsLoaded","error","toggleModal","incomeButton","styles","container","incomeView","fontsStyle","regular16","valueAndButton","regular39","rawData","StyleSheet","create","backgroundColor","padding","flexDirection","alignItems","monthLabel","marginRight","marginLeft","marginVertical","bigBoldText","fontSize","fontWeight","mediumBoldText","normalText","fontFamily","marginHorizontal","flex","modal","dateAndButtonView","justifyContent","changeButton","date","valueView","marginTop","insertButton","regular25","semibold16","semibold25","semibold39"],"mappings":"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","sourcesContent":["\nimport {Text, StyleSheet, View, FlatList, TextInput} from 'react-native'\nimport {React, useState} from 'react'\nimport AddModal from './addModal';\nimport DataList from './dataList';\n\nimport{Button, Layout, Card} from '@ui-kitten/components'\n\nimport { Poppins_400Regular, Poppins_600SemiBold, useFonts } from '@expo-google-fonts/poppins'\n\nexport default function ReportOverview({route, navigation}){\n    const data = route.params\n    const [isModalVisible, setModalVisible] = useState(false);\n    const [isAddingIncome, setAddingIncome] = useState();\n  \n\n    /* FONTS LOADING */\n    let [fontsLoaded, error] = useFonts({\n        Poppins_400Regular,\n        Poppins_600SemiBold\n      });\n\n      \n    const toggleModal = (incomeButton) => {\n        if(incomeButton)\n            setAddingIncome(true);\n        else\n            setAddingIncome(false);\n\n        setModalVisible(!isModalVisible);\n    };\n\n    if (!fontsLoaded) {\n        return (\n            <View>\n                <Text>Loading</Text>\n            </View>\n        );\n    }else{\n        return(\n            <Layout style={styles.container}>\n                {/*\n                    <View style={styles.monthLabel}>\n                        <Text style={fontsStyle.semibold25}>{data.timeSpanName}</Text>\n                    </View>*/\n                }\n                <View style={styles.incomeView}>                            \n                    <Text style={fontsStyle.regular16}>Total incomes:</Text>\n                    <View style={styles.valueAndButton}>\n                        <Text style={fontsStyle.regular39}>100,0€</Text>\n                        <Button >+</Button>\n                    </View>\n                    \n                </View>\n\n                <Text style={fontsStyle.regular16}>Total expenses:</Text>\n                <Text style={fontsStyle.regular39}>100,0€</Text>\n\n                \n                <Button onPress={() => toggleModal(true)} status='success' appearance='outline'>New Income</Button>\n                <Button onPress={() => toggleModal(false)} status='danger' appearance='outline'>New Expense</Button>\n                <AddModal toggleModal={toggleModal} isModalVisible={isModalVisible} isAddingIncome={isAddingIncome}/>\n                <DataList rawData={data.rawData}/>\n            </Layout>\n        );\n    }\n\n}\n\n\n\n  \nconst styles = StyleSheet.create({\n    incomeView:{\n        backgroundColor: 'pink',\n        padding: 20\n    },\n    valueAndButton:{\n        flexDirection: 'row',\n        alignItems: 'center',\n        backgroundColor: 'purple',\n        \n    },\n    monthLabel:{\n        marginRight: 'auto',\n        marginLeft: 20,\n        marginVertical: 20    \n    },\n    bigBoldText: {\n        fontSize: 40,\n        fontWeight: 'bold',\n    },\n    mediumBoldText: {\n        fontSize: 30,\n        fontWeight: 'bold',\n    },\n    normalText: {\n        fontSize: 20,\n        fontFamily: 'Poppins_400Regular'\n    },\n    container:{\n        marginVertical: 20,\n        marginHorizontal: 20,\n        alignItems: 'center',\n        backgroundColor: 'grey',\n        flex: 1\n    },\n    modal:{\n        padding: 30,\n        flex: 0,\n        backgroundColor: 'white',\n\n    },\n    dateAndButtonView:{\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        /*backgroundColor: 'red'        */\n\n    },\n    changeButton: {\n        flex: 1,\n        marginLeft: 100,\n    },\n    date:{\n        flex: 1,\n        justifyContent: 'center',\n        /*backgroundColor: 'blue'*/\n    },\n    valueView:{\n        marginTop: 20,\n        \n    },\n    insertButton:{\n        marginTop: 40\n    }\n\n\n});\n\nconst fontsStyle = StyleSheet.create({\n    regular16: {\n        fontSize: 16,\n        fontFamily: 'Poppins_400Regular'\n    },\n    regular25: {\n        fontSize: 25,\n        fontFamily: 'Poppins_400Regular'\n    },\n    regular39: {\n        fontSize: 39,\n        fontFamily: 'Poppins_400Regular'\n    },\n    semibold16: {\n        fontSize: 16,\n        fontFamily: 'Poppins_600SemiBold'\n    },\n    semibold25: {\n        fontSize: 25,\n        fontFamily: 'Poppins_600SemiBold'\n    },\n    semibold39: {\n        fontSize: 39,\n        fontFamily: 'Poppins_600SemiBold'\n    },\n})"]},"metadata":{},"sourceType":"module"}