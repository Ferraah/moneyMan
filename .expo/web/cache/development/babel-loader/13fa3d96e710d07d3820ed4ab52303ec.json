{"ast":null,"code":"export var tempSettings = {\n  USERNAME: 'Zeta',\n  TIMESPAN: 'MONTHLY',\n  YEAR: 2022\n};\nexport var tempData = [{\n  date: \"10 January 2022 13:30:00 UTC+01:00\",\n  expenditures: {\n    value: 30,\n    category: \"Transports\"\n  },\n  incomes: {\n    value: 100,\n    category: \"Paycheck\",\n    notes: \"Stipendio Verve\"\n  }\n}, {\n  date: \"22 January 2022 13:30:00 UTC+01:00\",\n  expenditures: {\n    value: 30,\n    category: \"Transports\"\n  },\n  incomes: {\n    value: 100,\n    category: \"Paycheck\",\n    notes: \"Stipendio Verve\"\n  }\n}, {\n  date: \"28 April 2022 13:30:00 UTC+01:00\",\n  expenditures: {\n    value: 30,\n    category: \"Transports\"\n  },\n  incomes: {\n    value: 100,\n    category: \"Paycheck\",\n    notes: \"Stipendio Verve\"\n  }\n}];\nexport function filterMonthly(yearlyData) {\n  var filteredDataObjects = [];\n  var tmp = [];\n  var graphTriplet = null;\n  var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  months.forEach(function (month) {\n    yearlyData.forEach(function (element) {\n      if (element.date.includes(month)) {\n        tmp.push(element);\n      }\n    });\n    graphTriplet = null;\n\n    if (tmp.length > 0) {\n      graphTriplet = calculateTripletTotal(tmp);\n      console.log(tmp);\n      filteredDataObjects.push({\n        timeSpanMode: \"MONTHLY\",\n        timeSpanName: month,\n        tripletTotal: graphTriplet,\n        rawData: tmp\n      });\n    }\n\n    tmp = [];\n  });\n  return filteredDataObjects;\n}\n\nfunction calculateTripletTotal(data) {\n  var incomes = 0,\n      expenditures = 0,\n      profit;\n  data.forEach(function (dailyData) {\n    incomes += dailyData.incomes.value;\n    expenditures += dailyData.expenditures.value;\n  });\n  profit = incomes - expenditures;\n  return {\n    incomes: incomes,\n    expenditures: expenditures,\n    profit: profit\n  };\n}","map":{"version":3,"sources":["/home/daniele/Programmazione/React/graph/components/homeLogic.js"],"names":["tempSettings","USERNAME","TIMESPAN","YEAR","tempData","date","expenditures","value","category","incomes","notes","filterMonthly","yearlyData","filteredDataObjects","tmp","graphTriplet","months","forEach","month","element","includes","push","length","calculateTripletTotal","console","log","timeSpanMode","timeSpanName","tripletTotal","rawData","data","profit","dailyData"],"mappings":"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","sourcesContent":["\n// Temporary Settings //\n\nexport const tempSettings = {\n    USERNAME : 'Zeta',\n    TIMESPAN : 'MONTHLY',\n    YEAR : 2022\n}\n\n\n//\n\nexport const tempData =         [\n    {\n        date: \"10 January 2022 13:30:00 UTC+01:00\",\n        expenditures:{\n            value: 30,\n            category: \"Transports\"\n        },\n        incomes:{\n            value: 100,\n            category: \"Paycheck\",\n            notes: \"Stipendio Verve\"\n        }\n\n    },\n    {\n        date: \"22 January 2022 13:30:00 UTC+01:00\",\n        expenditures:{\n            value: 30,\n            category: \"Transports\"\n        },\n        incomes:{\n            value: 100,\n            category: \"Paycheck\",\n            notes: \"Stipendio Verve\"\n        }\n\n    },\n    {\n        date: \"28 April 2022 13:30:00 UTC+01:00\",\n        expenditures:{\n            value: 30,\n            category: \"Transports\"\n        },\n        incomes:{\n            value: 100,\n            category: \"Paycheck\",\n            notes: \"Stipendio Verve\"\n        }\n\n    }\n\n]\n\n\nexport function filterMonthly(yearlyData){\n    var filteredDataObjects = []\n    var tmp = [];\n    var graphTriplet = null;\n\n    const months= [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\n            \"August\",\"September\",\"October\",\"November\",\"December\"];\n        \n        \n    months.forEach(month => {\n        yearlyData.forEach(element => {\n            \n            if(element.date.includes(month)){\n                tmp.push(element);\n            }\n            \n        });\n\n        graphTriplet = null;\n        if(tmp.length > 0){\n            graphTriplet = calculateTripletTotal(tmp);\n            console.log(tmp);\n\n            filteredDataObjects.push({\n                // MONTHLY\n                timeSpanMode: \"MONTHLY\",\n                // January, February ... December\n                timeSpanName: month,\n                // Triplet including Incomes, expenditures and profits\n                tripletTotal: graphTriplet,\n                // Every daily object consisting of \n                rawData: tmp\n            })\n\n        }\n\n\n\n        tmp = [];\n\n    });\n\n\n    return filteredDataObjects;\n}\n\nfunction calculateTripletTotal(data){\n    var incomes = 0, expenditures = 0, profit;\n    \n    data.forEach(dailyData => {\n        incomes += dailyData.incomes.value;\n        expenditures += dailyData.expenditures.value;    \n    });\n\n    profit = incomes - expenditures;\n\n    return {\n        incomes: incomes,\n        expenditures: expenditures,\n        profit: profit\n    }\n    \n}\n\n//console.log(filterMonthly(tempData, tempSettings.TIMESPAN, tempSettings.YEAR))"]},"metadata":{},"sourceType":"module"}