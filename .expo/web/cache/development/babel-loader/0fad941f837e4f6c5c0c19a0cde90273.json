{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { React, useState } from \"react\";\nimport Graph from \"../shared/graph\";\nimport Card from \"../shared/card\";\nimport { filterMonthly } from \"../shared/dataHandlers\";\nimport { tempSettings, tempData } from \"./logic/homeLogic\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { testFirebase } from \"../firebase/getData\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction onPressCard(navigation, item) {\n  navigation.navigate('ReportOverview', item);\n}\n\nfunction populatePage(timeSpanMode) {\n  if (timeSpanMode === \"MONTHLY\") {\n    var tmp = filterMonthly(tempData);\n    return tmp;\n  }\n}\n\nexport default function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(tempData),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  return _jsx(View, {\n    children: _jsx(SafeAreaView, {\n      style: styles.container,\n      children: _jsxs(ScrollView, {\n        nestedScrollEnabled: true,\n        children: [_jsxs(View, {\n          style: styles.resocontoView,\n          children: [_jsx(Text, {\n            style: styles.bigBoldText,\n            children: \"2020\"\n          }), _jsx(Text, {\n            style: styles.normalText,\n            children: \"Ecco i resconti del mese:\"\n          }), _jsx(Button, {\n            onPress: function onPress() {\n              return testFirebase();\n            },\n            children: \"Test Button\"\n          })]\n        }), _jsx(FlatList, {\n          data: populatePage(tempSettings.TIMESPAN),\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return onPressCard(navigation, item);\n              },\n              children: _jsx(Card, {\n                children: _jsx(Graph, {\n                  data: item.tripletTotal\n                })\n              })\n            });\n          },\n          style: styles.flatlistView\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  resocontoView: {\n    alignSelf: 'flex-start'\n  },\n  flatlistView: {\n    backgroundColor: 'blue',\n    marginTop: 15\n  },\n  bigBoldText: {\n    fontSize: 40,\n    fontWeight: 'bold'\n  },\n  normalText: {\n    fontSize: 20\n  },\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'pink'\n  }\n});","map":{"version":3,"sources":["/home/daniele/Programmazione/React/graph/components/home.js"],"names":["React","useState","Graph","Card","filterMonthly","tempSettings","tempData","testFirebase","onPressCard","navigation","item","navigate","populatePage","timeSpanMode","tmp","Home","data","setData","styles","container","resocontoView","bigBoldText","normalText","TIMESPAN","tripletTotal","flatlistView","StyleSheet","create","alignSelf","backgroundColor","marginTop","fontSize","fontWeight","justifyContent","alignItems"],"mappings":";AACA,SAAQA,KAAR,EAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,SAAQC,aAAR;AAEA,SAAQC,YAAR,EAAsBC,QAAtB;;;;;;;;;AAIA,SAASC,YAAT;;;;AAEA,SAASC,WAAT,CAAqBC,UAArB,EAAiCC,IAAjC,EAAsC;AAClCD,EAAAA,UAAU,CAACE,QAAX,CAAoB,gBAApB,EAAsCD,IAAtC;AAEH;;AAED,SAASE,YAAT,CAAsBC,YAAtB,EAAmC;AAG/B,MAAGA,YAAY,KAAK,SAApB,EAA8B;AAC1B,QAAMC,GAAG,GAAGV,aAAa,CAACE,QAAD,CAAzB;AACA,WAAOQ,GAAP;AACH;AAIJ;;AAGD,eAAe,SAASC,IAAT,OAA2B;AAAA,MAAZN,UAAY,QAAZA,UAAY;;AAEtC,kBAAwBR,QAAQ,CAACK,QAAD,CAAhC;AAAA;AAAA,MAAOU,IAAP;AAAA,MAAaC,OAAb;;AAGA,SACI,KAAC,IAAD;AAAA,cAGI,KAAC,YAAD;AAAc,MAAA,KAAK,EAAEC,MAAM,CAACC,SAA5B;AAAA,gBACI,MAAC,UAAD;AAAY,QAAA,mBAAmB,MAA/B;AAAA,mBACA,MAAC,IAAD;AAAM,UAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA,qBACI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEF,MAAM,CAACG,WAApB;AAAA;AAAA,YADJ,EAEI,KAAC,IAAD;AAAM,YAAA,KAAK,EAAEH,MAAM,CAACI,UAApB;AAAA;AAAA,YAFJ,EAGI,KAAC,MAAD;AAAQ,YAAA,OAAO,EAAE;AAAA,qBAAMf,YAAY,EAAlB;AAAA,aAAjB;AAAA;AAAA,YAHJ;AAAA,UADA,EAOK,KAAC,QAAD;AACG,UAAA,IAAI,EAAEK,YAAY,CAACP,YAAY,CAACkB,QAAd,CADrB;AAEG,UAAA,UAAU,EAAE;AAAA,gBAAEb,IAAF,SAAEA,IAAF;AAAA,mBACR,KAAC,gBAAD;AAAkB,cAAA,OAAO,EAAE;AAAA,uBAAMF,WAAW,CAACC,UAAD,EAAaC,IAAb,CAAjB;AAAA,eAA3B;AAAA,wBACI,KAAC,IAAD;AAAA,0BACI,KAAC,KAAD;AAAO,kBAAA,IAAI,EAAEA,IAAI,CAACc;AAAlB;AADJ;AADJ,cADQ;AAAA,WAFf;AAUG,UAAA,KAAK,EAAEN,MAAM,CAACO;AAVjB,UAPL;AAAA;AADJ;AAHJ,IADJ;AA8BH;AAED,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,aAAa,EAAE;AACXQ,IAAAA,SAAS,EAAE;AADA,GADc;AAK7BH,EAAAA,YAAY,EAAE;AACVI,IAAAA,eAAe,EAAE,MADP;AAEVC,IAAAA,SAAS,EAAE;AAFD,GALe;AAS7BT,EAAAA,WAAW,EAAE;AACTU,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,UAAU,EAAE;AAFH,GATgB;AAa7BV,EAAAA,UAAU,EAAE;AACRS,IAAAA,QAAQ,EAAE;AADF,GAbiB;AAgB7BZ,EAAAA,SAAS,EAAC;AACNc,IAAAA,cAAc,EAAE,QADV;AAENC,IAAAA,UAAU,EAAE,QAFN;AAGNL,IAAAA,eAAe,EAAE;AAHX;AAhBmB,CAAlB,CAAf","sourcesContent":["\nimport {React, useState} from \"react\";\nimport Graph from \"../shared/graph\";\nimport Card from \"../shared/card\";\nimport {filterMonthly} from \"../shared/dataHandlers\"\n\nimport {tempSettings, tempData} from \"./logic/homeLogic\"\n\nimport {Text, View, StyleSheet, FlatList, ScrollView, SafeAreaView, TouchableOpacity, Button} from 'react-native'\n\nimport { testFirebase } from \"../firebase/getData\";\n\nfunction onPressCard(navigation, item){\n    navigation.navigate('ReportOverview', item)\n\n}\n\nfunction populatePage(timeSpanMode){\n    \n    // Filtra per Mese\n    if(timeSpanMode === \"MONTHLY\"){\n        const tmp = filterMonthly(tempData);\n        return tmp;\n    }\n\n    // ...da fare... //\n\n}\n\n\nexport default function Home({navigation}){\n   \n    const [data, setData] = useState(tempData);\n\n\n    return(\n        <View>\n            {/*<Header*/}\n\n            <SafeAreaView style={styles.container}>\n                <ScrollView nestedScrollEnabled>\n                <View style={styles.resocontoView}>\n                    <Text style={styles.bigBoldText}>2020</Text>\n                    <Text style={styles.normalText}>Ecco i resconti del mese:</Text>\n                    <Button onPress={() => testFirebase()}>Test Button</Button>\n                </View>\n\n                    {<FlatList\n                        data={populatePage(tempSettings.TIMESPAN)}\n                        renderItem={({item}) => (\n                            <TouchableOpacity onPress={() => onPressCard(navigation, item)}>\n                                <Card>\n                                    <Graph data={item.tripletTotal}></Graph>\n                                </Card>\n                            </TouchableOpacity>\n\n                        )}\n                        style={styles.flatlistView}\n                        />}\n                </ScrollView>\n            </SafeAreaView>\n\n        </View>\n    );\n\n}\n\nconst styles = StyleSheet.create({\n    resocontoView: {\n        alignSelf: 'flex-start',\n\n    },\n    flatlistView: {\n        backgroundColor: 'blue',\n        marginTop: 15\n    },\n    bigBoldText: {\n        fontSize: 40,\n        fontWeight: 'bold',\n    },\n    normalText: {\n        fontSize: 20\n    },\n    container:{\n        justifyContent: 'center',\n        alignItems: 'center',\n        backgroundColor: 'pink'\n    }\n});"]},"metadata":{},"sourceType":"module"}